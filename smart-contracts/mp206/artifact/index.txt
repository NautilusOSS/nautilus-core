88e48902
WARNING: Compiler instructed to emit for Algorand, but the conservative analysis found these potential problems:
 * API a_sale_buyNet may use up to 11 transaction references, but the limit is 8. API a_sale_buyNet starts at /app/mp206/index.rsh:210:31:application.
 * API a_sale_buyNet may use up to 5 accounts, but the limit is 4. API a_sale_buyNet starts at /app/mp206/index.rsh:210:31:application.
 * API a_sale_buySC may use up to 13 boxes, but the limit is 8. API a_sale_buySC starts at /app/mp206/index.rsh:210:31:application.
 * API a_sale_buySC may use up to 21 transaction references, but the limit is 8. API a_sale_buySC starts at /app/mp206/index.rsh:210:31:application.
 * API a_sale_buySC may use up to 6 accounts, but the limit is 4. API a_sale_buySC starts at /app/mp206/index.rsh:210:31:application.
 * Step 0 calls a remote object at /app/mp206/index.rsh:199:40:application. This means that Reach's conservative analysis of resource utilization and fees is incorrect, because we cannot take into account the needs of the remote object. Furthermore, the remote object may require special transaction parameters which are not expressed in the Reach API or the Algorand ABI standards.
 * Step 2 calls a remote object at /app/mp206/index.rsh:257:15:application. This means that Reach's conservative analysis of resource utilization and fees is incorrect, because we cannot take into account the needs of the remote object. Furthermore, the remote object may require special transaction parameters which are not expressed in the Reach API or the Algorand ABI standards.
 * Step 2 calls a remote object at /app/mp206/index.rsh:276:15:application. This means that Reach's conservative analysis of resource utilization and fees is incorrect, because we cannot take into account the needs of the remote object. Furthermore, the remote object may require special transaction parameters which are not expressed in the Reach API or the Algorand ABI standards.
 * Step 2 calls a remote object at /app/mp206/index.rsh:295:15:application. This means that Reach's conservative analysis of resource utilization and fees is incorrect, because we cannot take into account the needs of the remote object. Furthermore, the remote object may require special transaction parameters which are not expressed in the Reach API or the Algorand ABI standards.
 * Step 2 may use up to 13 boxes, but the limit is 8. Step 2 starts at /app/mp206/index.rsh:210:31:dot.
 * Step 2 may use up to 21 transaction references, but the limit is 8. Step 2 starts at /app/mp206/index.rsh:210:31:dot.
 * Step 2 may use up to 6 accounts, but the limit is 4. Step 2 starts at /app/mp206/index.rsh:210:31:dot.
 * This program uses 'ALGOExitMode: DeleteAndCloseOutAll_SoundASAs_UnsoundElse' (the default) _and_ creates Map entries and Reach cannot guarantee that these closed at application exit, but we are generating a close out anyways. If those resources are not freed, then this close out will fail and the final transaction will always be rejected.
Compiling `MP206`...
Verifying knowledge assertions
Verifying for generic connector
  Verifying when ALL participants are honest
  Verifying when NO participants are honest
Checked 914 theorems; No failures!